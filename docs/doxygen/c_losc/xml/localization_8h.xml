<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="localization_8h" kind="file" language="C++">
    <compoundname>localization.h</compoundname>
    <includes refid="matrix_8h" local="no">c_losc/matrix.h</includes>
    <includes local="no">stddef.h</includes>
    <includedby refid="losc_8h" local="no">/home/yuncai/Documents/Server/losc/include/c_losc/losc.h</includedby>
    <incdepgraph>
      <node id="15">
        <label>/home/yuncai/Documents/Server/losc/include/c_losc/localization.h</label>
        <link refid="localization.h"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>stddef.h</label>
      </node>
      <node id="16">
        <label>c_losc/matrix.h</label>
        <link refid="matrix_8h"/>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="19">
        <label>/home/yuncai/Documents/Server/losc/include/c_losc/losc.h</label>
        <link refid="losc_8h"/>
      </node>
      <node id="18">
        <label>/home/yuncai/Documents/Server/losc/include/c_losc/localization.h</label>
        <link refid="localization.h"/>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structLoscLocalizerBase" prot="public">LoscLocalizerBase</innerclass>
    <innerclass refid="structLoscLocalizerV2" prot="public">LoscLocalizerV2</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="localization_8h_1ae440be4d1540fe1e1a23478fb91aa052" prot="public" static="no">
        <name>losc_localizer_v2_free</name>
        <param><defname>ptr</defname></param>
        <initializer>_losc_localizer_v2_free(&amp;(ptr))</initializer>
        <briefdescription>
<para>Free a LoscLoscLocalizerV2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer with type <computeroutput><ref refid="structLoscLocalizerV2" kindref="compound">LoscLocalizerV2</ref> *</computeroutput>. At exit, <computeroutput>ptr</computeroutput> is set to null. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuncai/Documents/Server/losc/include/c_losc/localization.h" line="172" column="9" bodyfile="/home/yuncai/Documents/Server/losc/include/c_losc/localization.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="localization_8h_1a28e015c53a94025d706ead475ae0e7d2" prot="public" static="no">
        <type>struct <ref refid="structLoscLocalizerBase" kindref="compound">LoscLocalizerBase</ref></type>
        <definition>typedef struct LoscLocalizerBase  LoscLocalizerBase</definition>
        <argsstring></argsstring>
        <name>LoscLocalizerBase</name>
        <briefdescription>
<para>The C interface for LOSC localizer base. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This struct exports all the functions for LOSC localization base class. This struct servers as helper class to avoid code duplication for the implementation of C interface. There is no need for C users to create a such struct in practice. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuncai/Documents/Server/losc/include/c_losc/localization.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="localization_8h_1a134b89ac19e1e601efd713d36aa69f4c" prot="public" static="no">
        <type>struct <ref refid="structLoscLocalizerV2" kindref="compound">LoscLocalizerV2</ref></type>
        <definition>typedef struct LoscLocalizerV2  LoscLocalizerV2</definition>
        <argsstring></argsstring>
        <name>LoscLocalizerV2</name>
        <briefdescription>
<para>The C interface for LOSC localizer version 2. </para>        </briefdescription>
        <detaileddescription>
<para>LOSC localization version 2 is defined in Eq. 7 in the LOSC2 paper (J. Phys. Chem. Lett. 2020, 11, 4, 1528â€“1535). <simplesect kind="see"><para><ref refid="localization_8h_1ae4379e9a966e6a082a70c9a12ddb23a7" kindref="member">losc_localizer_v2_create()</ref>: create a <ref refid="structLoscLocalizerV2" kindref="compound">LoscLocalizerV2</ref>. </para></simplesect>
<simplesect kind="see"><para><ref refid="localization_8h_1ae4379e9a966e6a082a70c9a12ddb23a7" kindref="member">losc_localizer_v2_create()</ref>: free a <ref refid="structLoscLocalizerV2" kindref="compound">LoscLocalizerV2</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuncai/Documents/Server/losc/include/c_losc/localization.h" line="151" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="localization_8h_1ae4379e9a966e6a082a70c9a12ddb23a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structLoscLocalizerV2" kindref="compound">LoscLocalizerV2</ref> *</type>
        <definition>LoscLocalizerV2* losc_localizer_v2_create</definition>
        <argsstring>(const losc_matrix *C_lo_basis, const losc_matrix *H_ao, const losc_matrix *D_ao[3])</argsstring>
        <name>losc_localizer_v2_create</name>
        <param>
          <type>const losc_matrix *</type>
          <declname>C_lo_basis</declname>
        </param>
        <param>
          <type>const losc_matrix *</type>
          <declname>H_ao</declname>
        </param>
        <param>
          <type>const losc_matrix *</type>
          <declname>D_ao</declname>
          <array>[3]</array>
        </param>
        <briefdescription>
<para>Constructor of LoscLoscLocalizerV2. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">C_lo_basis</parametername>
</parameternamelist>
<parameterdescription>
<para>LO basis coefficient matrix under AO with dimension <computeroutput>[nbasis, nlo]</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">H_ao</parametername>
</parameternamelist>
<parameterdescription>
<para>Hamiltonian matrix under AO used in localization with dimension <computeroutput>[nbasis, nbasis]</computeroutput>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">D_ao</parametername>
</parameternamelist>
<parameterdescription>
<para>dipole matrix under AO in x, y and z order with dimension <computeroutput>[nbasis, nbasis]</computeroutput>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>create a LoscLoscLocalizerV1 struct and return the pointer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/yuncai/Documents/Server/losc/include/c_losc/localization.h" line="163" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The C interface for LOSC localization. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>_LOSC_INCLUDE_C_LOSC_LOCALIZATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_LOSC_INCLUDE_C_LOSC_LOCALIZATION_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="matrix_8h" kindref="compound">c_losc/matrix.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//**********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==&gt;<sp/>Interface<sp/>for<sp/>`losc::LocalizerBase`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//**********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_LocalizerBase<sp/>_LocalizerBase;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="structLoscLocalizerBase" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structLoscLocalizerBase" kindref="compound">LoscLocalizerBase</ref><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>_LocalizerBase<sp/>*_p_base;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>List<sp/>interface<sp/>of<sp/>methods<sp/>exposed<sp/>to<sp/>C<sp/>users<sp/>bellow.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structLoscLocalizerBase_1aca3a9c52da93e57fc52a5f773576dca4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structLoscLocalizerBase_1aca3a9c52da93e57fc52a5f773576dca4" kindref="member">set_max_iter</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structLoscLocalizerBase" kindref="compound">LoscLocalizerBase</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_iter);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="structLoscLocalizerBase_1ab87d4668bf48f4fabbaffedc779954c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structLoscLocalizerBase_1ab87d4668bf48f4fabbaffedc779954c4" kindref="member">set_convergence</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structLoscLocalizerBase" kindref="compound">LoscLocalizerBase</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tol);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structLoscLocalizerBase_1a914ea2ad2081c4873a9014f13fe2a4c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structLoscLocalizerBase_1a914ea2ad2081c4873a9014f13fe2a4c4" kindref="member">set_random_permutation</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structLoscLocalizerBase" kindref="compound">LoscLocalizerBase</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="structLoscLocalizerBase_1afe38df9a2c0c9ed648f94d849c373a5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structLoscLocalizerBase_1afe38df9a2c0c9ed648f94d849c373a5f" kindref="member">lo_U</ref>)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structLoscLocalizerBase" kindref="compound">LoscLocalizerBase</ref><sp/>*</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>losc_matrix<sp/>*L,<sp/>losc_matrix<sp/>*U);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}<sp/><ref refid="localization_8h_1a28e015c53a94025d706ead475ae0e7d2" kindref="member">LoscLocalizerBase</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//**********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==&gt;<sp/>Interface<sp/>for<sp/>`losc::LoscLocalizerV2`</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//**********************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_LoscLocalizerV2<sp/>_LoscLocalizerV2;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="structLoscLocalizerV2" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structLoscLocalizerV2" kindref="compound">LoscLocalizerV2</ref><sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>_LoscLocalizerV2<sp/>*_p_v2;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structLoscLocalizerV2_1a7d1a4a1a2d8e5abc2a869c6232bab2c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structLoscLocalizerBase" kindref="compound">LoscLocalizerBase</ref><sp/>*<ref refid="structLoscLocalizerV2_1a7d1a4a1a2d8e5abc2a869c6232bab2c9" kindref="member">p_base</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@note</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>`losc::LoscLocalizerV2`<sp/>has<sp/>new<sp/>public<sp/>functions<sp/>(new<sp/>functions<sp/>added</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>`losc::LoscLocalizerV2`<sp/>not<sp/>in<sp/>its<sp/>base<sp/>class)<sp/>in<sp/>the<sp/>future,<sp/>add<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>corresponding<sp/>C<sp/>interface<sp/>with<sp/>new<sp/>function<sp/>pointers<sp/>below.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal">}<sp/><ref refid="localization_8h_1a134b89ac19e1e601efd713d36aa69f4c" kindref="member">LoscLocalizerV2</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><ref refid="structLoscLocalizerV2" kindref="compound">LoscLocalizerV2</ref><sp/>*<ref refid="localization_8h_1ae4379e9a966e6a082a70c9a12ddb23a7" kindref="member">losc_localizer_v2_create</ref>(</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>losc_matrix<sp/>*C_lo_basis,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>losc_matrix<sp/>*H_ao,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>losc_matrix<sp/>*D_ao[3]);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="localization_8h_1ae440be4d1540fe1e1a23478fb91aa052" refkind="member"><highlight class="preprocessor">#define<sp/>losc_localizer_v2_free(ptr)<sp/>_losc_localizer_v2_free(&amp;(ptr))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*_losc_localizer_v2_free(<ref refid="structLoscLocalizerV2" kindref="compound">LoscLocalizerV2</ref><sp/>**pptr_self);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/yuncai/Documents/Server/losc/include/c_losc/localization.h"/>
  </compounddef>
</doxygen>
